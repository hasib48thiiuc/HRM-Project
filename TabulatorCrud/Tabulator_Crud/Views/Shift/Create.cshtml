@model Shift;
@{
    ViewData["Title"] = "Create";

}

<h1>Create Shift</h1>

<form id="createForm" asp-action="Create" asp-controller="Shift">
    <div class="mb-3">
        <label asp-for="shiftName" class="form-label">Shift Name</label>
        <input type="text" asp-for="shiftName" class="form-control" id="shiftName" required>
    </div>

    <div class="mb-3">
        <label asp-for="shiftIn" class="form-label">Shift In</label>
        <input type="time" asp-for="shiftIn" class="form-control" id="shiftIn" required>
    </div> 
    <div class="mb-3">
        <label asp-for="shiftOut" class="form-label">Shift Out</label>
        <input type="time" asp-for="shiftOut" class="form-control" id="shiftOut" required>
    </div> 
    <div class="mb-3">
        <label asp-for="shiftLate" class="form-label">Shift Late</label>
        <input type="time" asp-for="shiftLate" class="form-control" id="shiftLate" required>
    </div>

     
    <button type="button" class="btn btn-primary mb-3" onclick="submitForm()">Submit</button>
</form>

<div id="tableContainer"></div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://unpkg.com/tabulator-tables@5.0.6/dist/js/tabulator.min.js"></script>
<script>
    var table;

    $(document).ready(function () {
        fetchDataFromServer();
    });
    function fetchDataFromServer() {
        var url = '/Shift/GetAll';
        return $.ajax({
            url: url,
            dataType: "json",
        }).done(function (response) {
            console.log("Normal response:", response);
            var dataTable = response;

            initializeOrUpdateTable(dataTable);
        });
    }
    function initializeOrUpdateTable(dataTable) {
        if (!table) {
            table = new Tabulator("#tableContainer", {
                data: dataTable,
                layout: "fitColumns",
                frozenRows: 1,
                columns: [
                    { title: 'deptId', field: 'deptId', visible: false },
                    { title: 'Shift Name', field: 'shiftName' },
                    { title: 'Shift In', field: 'shiftIn' },
                    { title: 'Shift Out', field: 'shiftOut' },
                    { title: 'Shift Late', field: 'shiftLate' },

                    {
                        title: "Actions",
                        formatter: function (cell, formatterParams, onRendered) {
                            var rowData = cell.getRow().getData();
                            console.log('Row data:', rowData);
                            return '<button class="btn btn-sm btn-primary" onclick="editRow(' + rowData.id + ')">Edit</button>' +
                                '<button class="btn btn-sm btn-danger" onclick="deleteRow(' + rowData.id + ')">Delete</button>';
                        },
                        headerSort: false,
                        align: 'center',
                        width: 150,
                    },
                ],
                dataBound: function () {
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });
        } else {
            table.setData(dataTable);
        }
    }

    function submitForm() {
        $.ajax({
            url: '/Shift/Create',
            type: 'POST',
            data: $('#createForm').serialize(),
            success: function (data) {
                $('#createForm')[0].reset();

                fetchDataFromServer();
            },
            error: function () {
                console.error('Error submitting form.');
            }
        });
    }

    function editRow(id) {
        window.location.href = '/Shift/Edit/' + id;
    }

    function deleteRow(id) {
        window.location.href = '/Shift/Delete/' + id;

        console.log('Delete clicked for row with ID:', id);
    }

</script>