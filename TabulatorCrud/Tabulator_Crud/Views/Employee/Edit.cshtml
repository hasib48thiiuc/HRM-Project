@model Employee;

@{
    ViewData["Title"] = "Edit";
    var departments = ViewBag.Departments as List<Department>; // Assuming Department is the model for departments
    var designations = ViewBag.Designations as List<Designation>; // Assuming Designation is the model for designations
    var shifts = ViewBag.Shifts as List<Shift>; // Assuming Shift is the model for shifts
}

<h1>Edit Employee</h1>

<form id="createForm" asp-action="Edit" asp-controller="Employee">
        <input type="hidden" asp-for="EmpId" id="Edit_ComId" /> <!-- Hidden field to store Company ID -->

    <div class="mb-3">
        <label asp-for="EmpName" class="form-label">Employee Name</label>
        <input type="text" asp-for="EmpName" class="form-control" id="empName" required>
    </div>

    <div class="mb-3">
        <label asp-for="EmpCode" class="form-label">Employee Code</label>
        <input type="text" asp-for="EmpCode" class="form-control" id="EmpCode" required>
    </div>
    <div class="mb-3">
        <label asp-for="Gender" class="form-label">Gender</label>
        <input type="text" asp-for="Gender" class="form-control" id="Gender" required>
    </div>
    <div class="mb-3">
        <label asp-for="Gross" class="form-label">Gross</label>
        <input type="number" asp-for="Gross" class="form-control" id="Gross" required>
    </div>
    <div class="mb-3">
        <label asp-for="Basic" class="form-label">Basic</label>
        <input type="text" asp-for="Basic" class="form-control" id="Basic" readonly>
    </div>

    <div class="mb-3">
        <label asp-for="Medical" class="form-label">Medical</label>
        <input type="text" asp-for="Medical" class="form-control" id="Medical" readonly>
    </div>

    <div class="mb-3">
        <label asp-for="HRent" class="form-label">HRent</label>
        <input type="text" asp-for="HRent" class="form-control" id="HRent" readonly>
    </div>
    <div class="mb-3">
        <label asp-for="DeptId" class="form-label">Department</label>
        <select asp-for="DeptId" class="form-control" id="DeptId">
            <option value="">Select Department</option>
            @foreach (var department in departments)
            {
                <option value="@department.DeptId">@department.DeptName</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="DesigId" class="form-label">Select Designation:</label>
        <select asp-for="DesigId" class="form-control" id="DesigId">
            <option value="">Select Designation</option>
            @foreach (var designation in designations)
            {
                <option value="@designation.DesigId">@designation.DesigName</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label asp-for="ShiftId" class="form-label">Shift Selection:</label>
        <select asp-for="ShiftId" class="form-control" id="ShiftId">
            <option value="">Select Shift</option>
            @foreach (var shift in shifts)
            {
                <option value="@shift.Id">@shift.shiftName </option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="DtJoin" class="form-label">Joining Date</label>
        <input type="date" asp-for="DtJoin" class="form-control" id="JoiningDate" required>
    </div>
    <button type="submit" class="btn btn-primary mb-3">Submit</button>
</form>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    // Function to handle Gross input change
    $('#Gross').on('input', function () {
        var grossValue = $(this).val();

        // Make an AJAX call to the server to get Basic, Medical, and HRent
        $.ajax({
            url: '/Employee/CalculateAllowances', // Replace with your actual endpoint
            type: 'POST',
            data: { gross: grossValue },
            success: function (data) {
                // Update the readonly inputs with the received data
                $('#Basic').val(data.basic);
                $('#Medical').val(data.medical);
                $('#HRent').val(data.hrent);
            },
            error: function () {
                console.error('Error calculating allowances.');
            }
        });
    });
</script>
